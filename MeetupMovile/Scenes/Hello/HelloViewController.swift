//
//  HelloViewController.swift
//  MeetupMovile
//
//  Created by Yasmin Benatti on 2018-10-15.
//  Copyright (c) 2018 Yasmin Benatti. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HelloDisplayLogic: class {
    func displaySuccess(viewModel: Hello.Something.ViewModel)
    func displayError(errorResponse: Hello.Something.ErrorResponse)
}

class HelloViewController: UIViewController {
    var interactor: HelloBusinessLogic?
    var router: (NSObjectProtocol & HelloRoutingLogic & HelloDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = HelloInteractor()
        let presenter = HelloPresenter()
        let router = HelloRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        doSomething()
    }
    
    // MARK: Do something
    
    @IBOutlet weak var nameTextField: UITextField!
    
    func doSomething() {
        let request = Hello.Something.Request()
        interactor?.doSomething(request: request)
    }
}

extension HelloViewController: HelloDisplayLogic {
    func displaySuccess(viewModel: Hello.Something.ViewModel) {
        nameTextField.text = viewModel.fullName
    }
    
    func displayError(errorResponse: Hello.Something.ErrorResponse) {
        let alert = UIAlertController(title: "Error", message: "Something happened :(", preferredStyle: .alert)
        let action = UIAlertAction(title: "OK", style: .default, handler: nil)
        alert.addAction(action)
        self.present(alert, animated: true, completion: nil)
    }
}
